package com.alipay.simplehbase.antlr.auto;
// Generated from Statements.g4 by ANTLR 4.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class StatementsLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__2=1, T__1=2, T__0=3, STAR=4, LB=5, RB=6, WHERE=7, SELECT=8, COUNT=9, 
		INSERT=10, DELETE=11, INTO=12, VALUES=13, FROM=14, ROWKEY=15, STARTKEY=16, 
		ENDKEY=17, HBASESTARTKEY=18, HBASEENDKEY=19, MAXVERSION=20, LIMIT=21, 
		TS=22, STARTTS=23, ENDTS=24, IS=25, NULL=26, NOT=27, AND=28, OR=29, LESSEQUAL=30, 
		LESS=31, GREATEREQUAL=32, GREATER=33, NOTEQUAL=34, EQUAL=35, NOTMATCH=36, 
		MATCH=37, IN=38, NOTIN=39, BETWEEN=40, NOTBETWEEN=41, ISNULL=42, ISNOTNULL=43, 
		ISMISSING=44, ISNOTMISSING=45, TEXT=46, WS=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"','", "'#'", "'\"'", "'*'", "'('", "')'", "'where'", "'select'", "'count'", 
		"'insert'", "'delete'", "'into'", "'values'", "'from'", "'rowkey'", "'startkey'", 
		"'endkey'", "'hbasestartkey'", "'hbaseendkey'", "'maxversion'", "'limit'", 
		"'ts'", "'startTS'", "'endTS'", "'is'", "'null'", "'not'", "'and'", "'or'", 
		"'lessequal'", "'less'", "'greaterequal'", "'greater'", "'notequal'", 
		"'equal'", "'notmatch'", "'match'", "'in'", "'notin'", "'between'", "'notbetween'", 
		"'isnull'", "'isnotnull'", "'ismissing'", "'isnotmissing'", "TEXT", "WS"
	};
	public static final String[] ruleNames = {
		"T__2", "T__1", "T__0", "STAR", "LB", "RB", "WHERE", "SELECT", "COUNT", 
		"INSERT", "DELETE", "INTO", "VALUES", "FROM", "ROWKEY", "STARTKEY", "ENDKEY", 
		"HBASESTARTKEY", "HBASEENDKEY", "MAXVERSION", "LIMIT", "TS", "STARTTS", 
		"ENDTS", "IS", "NULL", "NOT", "AND", "OR", "LESSEQUAL", "LESS", "GREATEREQUAL", 
		"GREATER", "NOTEQUAL", "EQUAL", "NOTMATCH", "MATCH", "IN", "NOTIN", "BETWEEN", 
		"NOTBETWEEN", "ISNULL", "ISNOTNULL", "ISMISSING", "ISNOTMISSING", "TEXT", 
		"WS"
	};


	public StatementsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Statements.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 46: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4\61\u0197\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b"+
		"\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3"+
		"\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#"+
		"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&"+
		"\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3*"+
		"\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,"+
		"\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3."+
		"\3.\3.\3.\3.\3/\6/\u018d\n/\r/\16/\u018e\3\60\6\60\u0192\n\60\r\60\16"+
		"\60\u0193\3\60\3\60\2\61\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21"+
		"\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1"+
		"%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\1"+
		"9\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1"+
		"Y.\1[/\1]\60\1_\61\2\3\2\4\n##&&*-/\60\62<>ACac\177\5\13\f\17\17\"\"\u0198"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3a\3"+
		"\2\2\2\5c\3\2\2\2\7e\3\2\2\2\tg\3\2\2\2\13i\3\2\2\2\rk\3\2\2\2\17m\3\2"+
		"\2\2\21s\3\2\2\2\23z\3\2\2\2\25\u0080\3\2\2\2\27\u0087\3\2\2\2\31\u008e"+
		"\3\2\2\2\33\u0093\3\2\2\2\35\u009a\3\2\2\2\37\u009f\3\2\2\2!\u00a6\3\2"+
		"\2\2#\u00af\3\2\2\2%\u00b6\3\2\2\2\'\u00c4\3\2\2\2)\u00d0\3\2\2\2+\u00db"+
		"\3\2\2\2-\u00e1\3\2\2\2/\u00e4\3\2\2\2\61\u00ec\3\2\2\2\63\u00f2\3\2\2"+
		"\2\65\u00f5\3\2\2\2\67\u00fa\3\2\2\29\u00fe\3\2\2\2;\u0102\3\2\2\2=\u0105"+
		"\3\2\2\2?\u010f\3\2\2\2A\u0114\3\2\2\2C\u0121\3\2\2\2E\u0129\3\2\2\2G"+
		"\u0132\3\2\2\2I\u0138\3\2\2\2K\u0141\3\2\2\2M\u0147\3\2\2\2O\u014a\3\2"+
		"\2\2Q\u0150\3\2\2\2S\u0158\3\2\2\2U\u0163\3\2\2\2W\u016a\3\2\2\2Y\u0174"+
		"\3\2\2\2[\u017e\3\2\2\2]\u018c\3\2\2\2_\u0191\3\2\2\2ab\7.\2\2b\4\3\2"+
		"\2\2cd\7%\2\2d\6\3\2\2\2ef\7$\2\2f\b\3\2\2\2gh\7,\2\2h\n\3\2\2\2ij\7*"+
		"\2\2j\f\3\2\2\2kl\7+\2\2l\16\3\2\2\2mn\7y\2\2no\7j\2\2op\7g\2\2pq\7t\2"+
		"\2qr\7g\2\2r\20\3\2\2\2st\7u\2\2tu\7g\2\2uv\7n\2\2vw\7g\2\2wx\7e\2\2x"+
		"y\7v\2\2y\22\3\2\2\2z{\7e\2\2{|\7q\2\2|}\7w\2\2}~\7p\2\2~\177\7v\2\2\177"+
		"\24\3\2\2\2\u0080\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082\u0083\7u\2\2\u0083"+
		"\u0084\7g\2\2\u0084\u0085\7t\2\2\u0085\u0086\7v\2\2\u0086\26\3\2\2\2\u0087"+
		"\u0088\7f\2\2\u0088\u0089\7g\2\2\u0089\u008a\7n\2\2\u008a\u008b\7g\2\2"+
		"\u008b\u008c\7v\2\2\u008c\u008d\7g\2\2\u008d\30\3\2\2\2\u008e\u008f\7"+
		"k\2\2\u008f\u0090\7p\2\2\u0090\u0091\7v\2\2\u0091\u0092\7q\2\2\u0092\32"+
		"\3\2\2\2\u0093\u0094\7x\2\2\u0094\u0095\7c\2\2\u0095\u0096\7n\2\2\u0096"+
		"\u0097\7w\2\2\u0097\u0098\7g\2\2\u0098\u0099\7u\2\2\u0099\34\3\2\2\2\u009a"+
		"\u009b\7h\2\2\u009b\u009c\7t\2\2\u009c\u009d\7q\2\2\u009d\u009e\7o\2\2"+
		"\u009e\36\3\2\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7"+
		"y\2\2\u00a2\u00a3\7m\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7{\2\2\u00a5 "+
		"\3\2\2\2\u00a6\u00a7\7u\2\2\u00a7\u00a8\7v\2\2\u00a8\u00a9\7c\2\2\u00a9"+
		"\u00aa\7t\2\2\u00aa\u00ab\7v\2\2\u00ab\u00ac\7m\2\2\u00ac\u00ad\7g\2\2"+
		"\u00ad\u00ae\7{\2\2\u00ae\"\3\2\2\2\u00af\u00b0\7g\2\2\u00b0\u00b1\7p"+
		"\2\2\u00b1\u00b2\7f\2\2\u00b2\u00b3\7m\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5"+
		"\7{\2\2\u00b5$\3\2\2\2\u00b6\u00b7\7j\2\2\u00b7\u00b8\7d\2\2\u00b8\u00b9"+
		"\7c\2\2\u00b9\u00ba\7u\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7u\2\2\u00bc"+
		"\u00bd\7v\2\2\u00bd\u00be\7c\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7v\2\2"+
		"\u00c0\u00c1\7m\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7{\2\2\u00c3&\3\2\2"+
		"\2\u00c4\u00c5\7j\2\2\u00c5\u00c6\7d\2\2\u00c6\u00c7\7c\2\2\u00c7\u00c8"+
		"\7u\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7p\2\2\u00cb"+
		"\u00cc\7f\2\2\u00cc\u00cd\7m\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7{\2\2"+
		"\u00cf(\3\2\2\2\u00d0\u00d1\7o\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3\7z\2"+
		"\2\u00d3\u00d4\7x\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7t\2\2\u00d6\u00d7"+
		"\7u\2\2\u00d7\u00d8\7k\2\2\u00d8\u00d9\7q\2\2\u00d9\u00da\7p\2\2\u00da"+
		"*\3\2\2\2\u00db\u00dc\7n\2\2\u00dc\u00dd\7k\2\2\u00dd\u00de\7o\2\2\u00de"+
		"\u00df\7k\2\2\u00df\u00e0\7v\2\2\u00e0,\3\2\2\2\u00e1\u00e2\7v\2\2\u00e2"+
		"\u00e3\7u\2\2\u00e3.\3\2\2\2\u00e4\u00e5\7u\2\2\u00e5\u00e6\7v\2\2\u00e6"+
		"\u00e7\7c\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7V\2\2"+
		"\u00ea\u00eb\7U\2\2\u00eb\60\3\2\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7"+
		"p\2\2\u00ee\u00ef\7f\2\2\u00ef\u00f0\7V\2\2\u00f0\u00f1\7U\2\2\u00f1\62"+
		"\3\2\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7u\2\2\u00f4\64\3\2\2\2\u00f5"+
		"\u00f6\7p\2\2\u00f6\u00f7\7w\2\2\u00f7\u00f8\7n\2\2\u00f8\u00f9\7n\2\2"+
		"\u00f9\66\3\2\2\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7q\2\2\u00fc\u00fd\7"+
		"v\2\2\u00fd8\3\2\2\2\u00fe\u00ff\7c\2\2\u00ff\u0100\7p\2\2\u0100\u0101"+
		"\7f\2\2\u0101:\3\2\2\2\u0102\u0103\7q\2\2\u0103\u0104\7t\2\2\u0104<\3"+
		"\2\2\2\u0105\u0106\7n\2\2\u0106\u0107\7g\2\2\u0107\u0108\7u\2\2\u0108"+
		"\u0109\7u\2\2\u0109\u010a\7g\2\2\u010a\u010b\7s\2\2\u010b\u010c\7w\2\2"+
		"\u010c\u010d\7c\2\2\u010d\u010e\7n\2\2\u010e>\3\2\2\2\u010f\u0110\7n\2"+
		"\2\u0110\u0111\7g\2\2\u0111\u0112\7u\2\2\u0112\u0113\7u\2\2\u0113@\3\2"+
		"\2\2\u0114\u0115\7i\2\2\u0115\u0116\7t\2\2\u0116\u0117\7g\2\2\u0117\u0118"+
		"\7c\2\2\u0118\u0119\7v\2\2\u0119\u011a\7g\2\2\u011a\u011b\7t\2\2\u011b"+
		"\u011c\7g\2\2\u011c\u011d\7s\2\2\u011d\u011e\7w\2\2\u011e\u011f\7c\2\2"+
		"\u011f\u0120\7n\2\2\u0120B\3\2\2\2\u0121\u0122\7i\2\2\u0122\u0123\7t\2"+
		"\2\u0123\u0124\7g\2\2\u0124\u0125\7c\2\2\u0125\u0126\7v\2\2\u0126\u0127"+
		"\7g\2\2\u0127\u0128\7t\2\2\u0128D\3\2\2\2\u0129\u012a\7p\2\2\u012a\u012b"+
		"\7q\2\2\u012b\u012c\7v\2\2\u012c\u012d\7g\2\2\u012d\u012e\7s\2\2\u012e"+
		"\u012f\7w\2\2\u012f\u0130\7c\2\2\u0130\u0131\7n\2\2\u0131F\3\2\2\2\u0132"+
		"\u0133\7g\2\2\u0133\u0134\7s\2\2\u0134\u0135\7w\2\2\u0135\u0136\7c\2\2"+
		"\u0136\u0137\7n\2\2\u0137H\3\2\2\2\u0138\u0139\7p\2\2\u0139\u013a\7q\2"+
		"\2\u013a\u013b\7v\2\2\u013b\u013c\7o\2\2\u013c\u013d\7c\2\2\u013d\u013e"+
		"\7v\2\2\u013e\u013f\7e\2\2\u013f\u0140\7j\2\2\u0140J\3\2\2\2\u0141\u0142"+
		"\7o\2\2\u0142\u0143\7c\2\2\u0143\u0144\7v\2\2\u0144\u0145\7e\2\2\u0145"+
		"\u0146\7j\2\2\u0146L\3\2\2\2\u0147\u0148\7k\2\2\u0148\u0149\7p\2\2\u0149"+
		"N\3\2\2\2\u014a\u014b\7p\2\2\u014b\u014c\7q\2\2\u014c\u014d\7v\2\2\u014d"+
		"\u014e\7k\2\2\u014e\u014f\7p\2\2\u014fP\3\2\2\2\u0150\u0151\7d\2\2\u0151"+
		"\u0152\7g\2\2\u0152\u0153\7v\2\2\u0153\u0154\7y\2\2\u0154\u0155\7g\2\2"+
		"\u0155\u0156\7g\2\2\u0156\u0157\7p\2\2\u0157R\3\2\2\2\u0158\u0159\7p\2"+
		"\2\u0159\u015a\7q\2\2\u015a\u015b\7v\2\2\u015b\u015c\7d\2\2\u015c\u015d"+
		"\7g\2\2\u015d\u015e\7v\2\2\u015e\u015f\7y\2\2\u015f\u0160\7g\2\2\u0160"+
		"\u0161\7g\2\2\u0161\u0162\7p\2\2\u0162T\3\2\2\2\u0163\u0164\7k\2\2\u0164"+
		"\u0165\7u\2\2\u0165\u0166\7p\2\2\u0166\u0167\7w\2\2\u0167\u0168\7n\2\2"+
		"\u0168\u0169\7n\2\2\u0169V\3\2\2\2\u016a\u016b\7k\2\2\u016b\u016c\7u\2"+
		"\2\u016c\u016d\7p\2\2\u016d\u016e\7q\2\2\u016e\u016f\7v\2\2\u016f\u0170"+
		"\7p\2\2\u0170\u0171\7w\2\2\u0171\u0172\7n\2\2\u0172\u0173\7n\2\2\u0173"+
		"X\3\2\2\2\u0174\u0175\7k\2\2\u0175\u0176\7u\2\2\u0176\u0177\7o\2\2\u0177"+
		"\u0178\7k\2\2\u0178\u0179\7u\2\2\u0179\u017a\7u\2\2\u017a\u017b\7k\2\2"+
		"\u017b\u017c\7p\2\2\u017c\u017d\7i\2\2\u017dZ\3\2\2\2\u017e\u017f\7k\2"+
		"\2\u017f\u0180\7u\2\2\u0180\u0181\7p\2\2\u0181\u0182\7q\2\2\u0182\u0183"+
		"\7v\2\2\u0183\u0184\7o\2\2\u0184\u0185\7k\2\2\u0185\u0186\7u\2\2\u0186"+
		"\u0187\7u\2\2\u0187\u0188\7k\2\2\u0188\u0189\7p\2\2\u0189\u018a\7i\2\2"+
		"\u018a\\\3\2\2\2\u018b\u018d\t\2\2\2\u018c\u018b\3\2\2\2\u018d\u018e\3"+
		"\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018f^\3\2\2\2\u0190\u0192"+
		"\t\3\2\2\u0191\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193\u0191\3\2\2\2\u0193"+
		"\u0194\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0196\b\60\2\2\u0196`\3\2\2\2"+
		"\5\2\u018e\u0193";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}